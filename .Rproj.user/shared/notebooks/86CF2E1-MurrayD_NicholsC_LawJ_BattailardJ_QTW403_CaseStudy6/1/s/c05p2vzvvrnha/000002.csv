"0","# using only signals to APs from previously trained locations"
"0","# need to reformat data so signal strength is across columns"
"0","macs = unique(offlineSummary$mac)"
"0","# read test data"
"0","online = readData(""Data/online.final.trace.txt"", subMacs = macs)"
"0","# set up unique XY"
"0","online$posXY = paste(online$posX, online$posY, sep = ""-"")"
"0","# 60 unique positions"
"0","length(unique(online$posXY))"
"1","[1]"
"1"," 60"
"1","
"
"0","# using only one orientation for each location"
"0","tabonlineXYA = table(online$posXY, online$angle)"
"0","tabonlineXYA[1:10, ]"
"1","            
"
"1","            "
"1","   0"
"1","  45"
"1","  90"
"1"," 135"
"1"," 180"
"1"," 225"
"1"," 270"
"1"," 315"
"1","
  0-0.05    "
"1","   0"
"1","   0"
"1","   0"
"1"," 593"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","
  0.15-9.42 "
"1","   0"
"1","   0"
"1"," 606"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","
  0.31-11.09"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1"," 573"
"1","   0"
"1","   0"
"1","
  0.47-8.2  "
"1"," 590"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","
  0.78-10.94"
"1"," 586"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","
  0.93-11.69"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1"," 583"
"1","   0"
"1","   0"
"1","   0"
"1","
  1.08-12.19"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1"," 630"
"1","   0"
"1","   0"
"1","
  1.24-3.93 "
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1"," 574"
"1","   0"
"1","
  1.39-6.61 "
"1","   0"
"1","   0"
"1","   0"
"1"," 595"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","
  1.52-9.32 "
"1"," 583"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","   0"
"1","
"
"0","# pivot data to include signals across columns"
"0","# take the mean of signal for each mac position along columns"
"0","keepVars = c(""posXY"", ""posX"", ""posY"", ""orientation"", ""angle"")"
"0","byLoc = with(online, "
"0","             by(online, list(posXY), "
"0","                function(x) {"
"0","                  ans = x[1, keepVars]"
"0","                  avgSS = tapply(x$signal, x$mac, mean)"
"0","                  y = matrix(avgSS, nrow = 1, ncol = 6,"
"0","                        dimnames = list(ans$posXY, names(avgSS)))"
"0","                  cbind(ans, y)"
"0","                }))"
"0","onlineSummary = do.call(""rbind"", byLoc)  "
"0","dim(onlineSummary)"
"1","[1]"
"1"," 60"
"1"," 11"
"1","
"
"0","# rename"
"0","names(onlineSummary)"
"1"," [1]"
"1"," ""posXY""            "
"1"," ""posX""             "
"1"," ""posY""             "
"1"," ""orientation""      "
"1"," ""angle""            "
"1"," ""00:0f:a3:39:e1:c0"""
"1","
"
"1"," [7]"
"1"," ""00:14:bf:3b:c7:c6"""
"1"," ""00:14:bf:b1:97:81"""
"1"," ""00:14:bf:b1:97:8a"""
"1"," ""00:14:bf:b1:97:8d"""
"1"," ""00:14:bf:b1:97:90"""
"1","
"
"0","# ANGLE ALIGNMENT"
"0","# want to find records in offline data (training) that have similar orientations to our new observations"
"0","# orientation CAN impact signal strength as already evidenced visually in boxplots"
"0","# finding nearest angles to help filter training data before aggregation:"
"0","m = 3; angleNewObs = 230"
"0","refs = seq(0, by = 45, length  = 8)"
"0","nearestAngle = roundOrientation(angleNewObs)"
"0","  "
"0","if (m %% 2 == 1) {"
"0","  angles = seq(-45 * (m - 1) /2, 45 * (m - 1) /2, length = m)"
"0","} else {"
"0","  m = m + 1"
"0","  angles = seq(-45 * (m - 1) /2, 45 * (m - 1) /2, length = m)"
"0","  if (sign(angleNewObs - nearestAngle) > -1) "
"0","    angles = angles[ -1 ]"
"0","  else "
"0","    angles = angles[ -m ]"
"0","}"
"0","angles = angles + nearestAngle"
"0","angles[angles < 0] = angles[ angles < 0 ] + 360"
"0","angles[angles > 360] = angles[ angles > 360 ] - 360"
"0","# with desired angles, select observations from offlineSummary for training"
"0","offlineSubset = "
"0","  offlineSummary[ offlineSummary$angle %in% angles, ]"
"0","# then reshape training set to match test set, with signals across columns"
"0","reshapeSS = function(data, varSignal = ""signal"", "
"0","                     keepVars = c(""posXY"", ""posX"",""posY"")) {"
"0","  byLocation ="
"0","    with(data, by(data, list(posXY), "
"0","                  function(x) {"
"0","                    ans = x[1, keepVars]"
"0","                    avgSS = tapply(x[ , varSignal ], x$mac, mean)"
"0","                    y = matrix(avgSS, nrow = 1, ncol = 6,"
"0","                               dimnames = list(ans$posXY,"
"0","                                               names(avgSS)))"
"0","                    cbind(ans, y)"
"0","                  }))"
"0","  newDataSS = do.call(""rbind"", byLocation)"
"0","  return(newDataSS)"
"0","}"
"0","# build all of this into a funciton"
"0","trainSS = reshapeSS(offlineSubset, varSignal = ""avgSignal"")"
"0","# wrap code to select angles and reshape the training set"
"0","# takes angle of new observation and associated angles from dataset using m"
"0","# angleNewObs sets reference point"
"0","# m is the number of angles to keep between 1 and 5 around reference point"
"0","# signals is the training dataset to filter and reshape"
"0","selectTrain = function(angleNewObs, signals = NULL, m = 1){"
"0","  refs = seq(0, by = 45, length  = 8)"
"0","  nearestAngle = roundOrientation(angleNewObs)"
"0","  "
"0","  if (m %% 2 == 1) "
"0","    angles = seq(-45 * (m - 1) /2, 45 * (m - 1) /2, length = m)"
"0","  else {"
"0","    m = m + 1"
"0","    angles = seq(-45 * (m - 1) /2, 45 * (m - 1) /2, length = m)"
"0","    if (sign(angleNewObs - nearestAngle) > -1) "
"0","      angles = angles[ -1 ]"
"0","    else "
"0","      angles = angles[ -m ]"
"0","  }"
"0","  angles = angles + nearestAngle"
"0","  angles[angles < 0] = angles[ angles < 0 ] + 360"
"0","  angles[angles > 360] = angles[ angles > 360 ] - 360"
"0","  angles = sort(angles) "
"0","  "
"0","  offlineSubset = signals[ signals$angle %in% angles, ]"
"0","  reshapeSS(offlineSubset, varSignal = ""avgSignal"")"
"0","}"
"0","# example"
"0","# use angle of 130 for offline summary taking 135 and two closest angles for training set"
"0","# reshape by aggregating, taking average of signals for each mac, angles considered"
"0","train130 = selectTrain(130, offlineSummary, m = 3)"
"0","head(train130)"
