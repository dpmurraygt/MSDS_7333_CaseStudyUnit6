"0","readData = "
"0","  function(filename = 'Data/offline.final.trace.txt', "
"0","           subMacs = c(""00:0f:a3:39:e1:c0"", ""00:0f:a3:39:dd:cd"", ""00:14:bf:b1:97:8a"","
"0","                       ""00:14:bf:3b:c7:c6"", ""00:14:bf:b1:97:90"", ""00:14:bf:b1:97:8d"","
"0","                       ""00:14:bf:b1:97:81""))"
"0","  {"
"0","    txt = readLines(filename)"
"0","    lines = txt[ substr(txt, 1, 1) != ""#"" ]"
"0","    tmp = lapply(lines, processLine)"
"0","    offline = as.data.frame(do.call(""rbind"", tmp), "
"0","                            stringsAsFactors= FALSE) "
"0","    "
"0","    names(offline) = c(""time"", ""scanMac"", "
"0","                       ""posX"", ""posY"", ""posZ"", ""orientation"", "
"0","                       ""mac"", ""signal"", ""channel"", ""type"")"
"0","    "
"0","     # keep only signals from access points"
"0","    offline = offline[ offline$type == ""3"", ]"
"0","    "
"0","    # drop scanMac, posZ, channel, and type - no info in them"
"0","    dropVars = c(""scanMac"", ""posZ"", ""channel"", ""type"")"
"0","    offline = offline[ , !( names(offline) %in% dropVars ) ]"
"0","    "
"0","    # drop more unwanted access points"
"0","    offline = offline[ offline$mac %in% subMacs, ]"
"0","    "
"0","    # convert numeric values"
"0","    numVars = c(""time"", ""posX"", ""posY"", ""orientation"", ""signal"")"
"0","    offline[ numVars ] = lapply(offline[ numVars ], as.numeric)"
"0","    # convert time to POSIX"
"0","    offline$rawTime = offline$time"
"0","    offline$time = offline$time/1000"
"0","    class(offline$time) = c(""POSIXt"", ""POSIXct"")"
"0","    "
"0","    # round orientations to nearest 45"
"0","    offline$angle = roundOrientation(offline$orientation)"
"0","      "
"0","    return(offline)"
"0","  }"
"0","offlineRedo = readData()"
"0","identical(offline, offlineRedo)"
"1","[1]"
"1"," TRUE"
"1","
"
"0","pdf(file = ""Geo_BoxplotSignalByMacAngle.pdf"", width = 7)"
