"0","onlineFold = subset(onlineCVSummary, 
                    posXY %in% permuteLocs[ , 1])
# this is our training set
offlineFold = subset(offlineSummary,
                     posXY %in% permuteLocs[ , -1])
# using both methods with k = 3
estFold = predXY(newSignals = onlineFold[ , 6:11], 
                 newAngles = onlineFold[ , 4], 
                 offlineFold, numAngles = 3, k = 3)
estFoldwtd = predXYwtd(newSignals = onlineFold[ , 6:11], 
                 newAngles = onlineFold[ , 4], 
                 offlineFold, numAngles = 3, k = 3)
actualFold = onlineFold[ , c(""posX"", ""posY"")]
calcError(estFoldwtd, actualFold)
"
"1","[1]"
"1"," 157"
"1","
"
"0","# formally test K out to 20 neighbors"
"0","K = 20"
"0","err = rep(0, K)"
"0","err_wtd = rep(0,K) # weighted error"
"0","for (j in 1:v) {"
"0","  onlineFold = subset(onlineCVSummary, "
"0","                      posXY %in% permuteLocs[ , j])"
"0","  offlineFold = subset(offlineSummary,"
"0","                       posXY %in% permuteLocs[ , -j])"
"0","  actualFold = onlineFold[ , c(""posX"", ""posY"")]"
"0","  "
"0","  for (k in 1:K) {"
"0","    estFold = predXY(newSignals = onlineFold[ , 6:11],"
"0","                     newAngles = onlineFold[ , 4], "
"0","                     offlineFold, numAngles = 3, k = k)"
"0","    err[k] = err[k] + calcError(estFold, actualFold)"
"0","    "
"0","    estFold_wtd = predXYwtd(newSignals = onlineFold[ , 6:11], # add in weighted calculations"
"0","                     newAngles = onlineFold[ , 4], "
"0","                     offlineFold, numAngles = 3, k = k)"
"0","    err_wtd[k] = err_wtd[k] + calcError(estFold_wtd, actualFold)"
"0","  }"
"0","}"
"0","#pdf(file = ""Images/Geo_CVChoiceOfK.pdf"", width = 8, height = 6)"
"0","oldPar = par(mar = c(4, 3, 1, 1))"
"0","plot(y = err, x = (1:K),  type = ""l"", lwd= 2,"
"0","     ylim = c(0, 2100),"
"0","     xlab = ""Number of Neighbors"","
"0","     ylab = ""Sum of Square Errors"")"
