"0","#Replace e1:c0 with dd:cd in the training data, retrain model, then reevaluate performance"
"0","# cross validate over each location, using all 8 orientations and 6 MAC addresses"
"0","# each fold has 166/11 = 15 locations"
"0","# must randomly select"
"0","v = 11"
"0","# permute locations"
"0","permuteLocs = sample(unique(offlineSummary$posXY))"
"0","# to calculate folds, build a matrix with 11 columns and ~15 locations each"
"0","permuteLocs = matrix(permuteLocs, ncol = v, "
"0","                     nrow = floor(length(permuteLocs)/v))"
"2","data length [166] is not a sub-multiple or multiple of the number of rows [15]"
"0","# get the first validation fold from our offline data"
"0","onlineFold = subset(offlineSummary, posXY %in% permuteLocs[ , 1])"
"0","# must re-summarize each fold to match onlineSummary format"
"0","# selecting orientation at random to create our CV folds"
"0","reshapeSS = function(data, varSignal = ""signal"", "
"0","                     keepVars = c(""posXY"", ""posX"",""posY""),"
"0","                     sampleAngle = FALSE, "
"0","                     refs = seq(0, 315, by = 45)) {"
"0","  byLocation ="
"0","    with(data, by(data, list(posXY), "
"0","                  function(x) {"
"0","                    if (sampleAngle) {"
"0","                      x = x[x$angle == sample(refs, size = 1), ]}"
"0","                    ans = x[1, keepVars]"
"0","                    avgSS = tapply(x[ , varSignal ], x$mac, mean)"
"0","                    y = matrix(avgSS, nrow = 1, ncol = 6,"
"0","                               dimnames = list(ans$posXY,"
"0","                                               names(avgSS)))"
"0","                    cbind(ans, y)"
"0","                  }))"
"0","  newDataSS = do.call(""rbind"", byLocation)"
"0","  return(newDataSS)"
"0","}"
"0","# exclude MAC"
"0","offline3 = offline[ offline$mac != ""00:0f:a3:39:e1:c0"", ]"
"0","keepVars = c(""posXY"", ""posX"",""posY"", ""orientation"", ""angle"")"
"0","# build CV base from offline data in general"
"0","onlineCVSummary = reshapeSS(offline3, keepVars = keepVars, "
"0","                            sampleAngle = TRUE)"
"0","# an example of one fold"
"0","onlineFold = subset(onlineCVSummary, "
"0","                    posXY %in% permuteLocs[ , 1])"
"0","# this is our training set"
"0","offlineFold = subset(offlineSummary,"
"0","                     posXY %in% permuteLocs[ , -1])"
"0","# using both methods with k = 3"
"0","estFold = predXY(newSignals = onlineFold[ , 6:11], "
"0","                 newAngles = onlineFold[ , 4], "
"0","                 offlineFold, numAngles = 3, k = 3)"
"0","estFoldwtd = predXYwtd(newSignals = onlineFold[ , 6:11], "
"0","                 newAngles = onlineFold[ , 4], "
"0","                 offlineFold, numAngles = 3, k = 3)"
"2","Error in predXYwtd(newSignals = onlineFold[, 6:11], newAngles = onlineFold[,  : 
  could not find function ""predXYwtd""
"
